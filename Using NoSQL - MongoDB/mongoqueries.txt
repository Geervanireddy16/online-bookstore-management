
database name = bookstore
-- ----------------------------------------------------COLLECTIONS-----------------------------------------------------------------------------
books
orders
users
-- -----------------------------------------------------INSERT-----------------------------------------------------------------------------

db.books.insert_one({
            "bookID":int(bookID),
            "title":title,
            "genre": genre,
            "authorname":str(fname+" "+lname),
            "price":int(price),
            "publicationyear":int(year),
            "publicationcountry":country,
            "soldStock":int(0),
            "totalStock":int(stock),
            "isdeleted":False
        })  # add book in Books collection


db.users.insert_one({
            "username":username,
            "account":"customer",
            "fname":fname,
            "lname":lname,
            "email":email,
            "password":password,
            "phone":int(phone),
            "country":country,
            "state":state,
            "pincode":int(pincode),
            "address":address
        }) # register a user


db.orders.insert_one({
            "customer_username":userID,
            "quantity":int(quantity),
            "bookID":int(isbn),
            "total_price":int(total),
            "timestamp":timestamp
        }) # add order

--------------------------------------------------------SELECT -----------------------------------------------------------------------------
db.books.find({"isdeleted":False})
db.books.find_one({"bookID":int(subject)})
db.books.distinct("genre", {"isdeleted":False})
db.users.find_one({"username":username,"password":password,"account":account})
db.orders.find({"customer_username":userID})
db.books.find({ "title": { "$regex": "(?i)"+str(query)} ,"isdeleted":False})
db.users.find({"account":"admin"})
db.users.find({"account":"customer"})
db.users.find_one({"username":userID})

--------------------------------------------------------UPDATE -----------------------------------------------------------------------------
db.books.update_one({"bookID":int(bookID),"price":int(price1),"isdeleted":False},{"$set": {"price": int(price2)}})
db.books.update_one({"bookID":int(bookID),"authorname":str(fname+" "+lname),"publicationcountry":country,"isdeleted":False},{"$set": {"isdeleted": True}})


--------------------------------------------------------TRIGGERS -----------------------------------------------------------------------------

IncSoldStock - To increment sold stock 

exports = function(changeEvent) {
  const fullDocument = changeEvent.fullDocument;
  const bookID = fullDocument.bookID;
  const quantity = fullDocument.quantity;
  const book_collection = context.services.get("Cluster0").db("bookstore").collection("books");
  
  const doc = book_collection.updateOne(           //if operation type is 'insert' increment post count by 1
    {bookID: bookID},
    {"$inc": {"soldStock": quantity}}
  );
  return doc; 
};

DcrTotalStock - To decrement total stock

exports = function(changeEvent) {
  const fullDocument = changeEvent.fullDocument;
  const bookID = fullDocument.bookID;
  const quantity = fullDocument.quantity;
  const book_collection = context.services.get("Cluster0").db("bookstore").collection("books");
  
  const doc = book_collection.updateOne(           //if operation type is 'insert' increment post count by 1
    {"bookID": bookID},
    {"$inc": {"totalStock": -quantity}}
  );
  return doc;
};

